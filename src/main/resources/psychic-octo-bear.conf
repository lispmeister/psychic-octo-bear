akka {
  loglevel = INFO
  logConfigOnStart = on

  actor {
    provider = "akka.remote.RemoteActorRefProvider"
  }

  remote {
    enabled-transports = ["akka.remote.netty.tcp"]
    netty.tcp {
      hostname = "127.0.0.1"
    }
  }


  debug {
    # enable function of LoggingReceive, which is to log any received message at
    # DEBUG level
    receive = on
    # enable DEBUG logging of all AutoReceiveMessages (Kill, PoisonPill and the like)
    autoreceive = on
    # enable DEBUG logging of actor lifecycle changes
    lifecycle = on
    # enable DEBUG logging of subscription changes on the eventStream
    event-stream = on
    # If this is "on", Akka will log all outbound messages at DEBUG level, if off then they are not logged
    log-sent-messages = on
    # If this is "on", Akka will log all inbound messages at DEBUG level, if off then they are not logged
    log-received-messages = on
  }

  # we use the Slf4jLogger as an example,
  # however, this is not a requirement, you can use any EventHandler you like
  event-handlers = ["akka.event.slf4j.Slf4jEventHandler"]
  event-handler-level = "INFO" # Options: ERROR, WARNING, INFO, DEBUG

  extensions += "com.github.levkhomich.akka.tracing.TracingExtension"

  tracing {
    host = "localhost"
    port = 9410
    sample-rate = 1
  }
}

frontend {
  akka.remote.netty.tcp.port = 2553
}

backend {
  akka.remote.netty.tcp.port = 2554
}
